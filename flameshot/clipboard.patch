diff -urt flameshot.orig/src/core/flameshotdbusadapter.cpp flameshot.new/src/core/flameshotdbusadapter.cpp
--- flameshot.orig/src/core/flameshotdbusadapter.cpp	2020-02-29 14:15:14.251928361 +0100
+++ flameshot.new/src/core/flameshotdbusadapter.cpp	2020-02-29 14:27:41.406538899 +0100
@@ -36,11 +36,13 @@
 
 }
 
-void FlameshotDBusAdapter::graphicCapture(QString path, int delay, uint id) {
+void FlameshotDBusAdapter::graphicCapture(
+        QString path, bool toClipboard, int delay, uint id)
+{
     CaptureRequest req(CaptureRequest::GRAPHICAL_MODE, delay, path);
-//    if (toClipboard) {
-//        req.addTask(CaptureRequest::CLIPBOARD_SAVE_TASK);
-//    }
+    if (toClipboard) {
+        req.addTask(CaptureRequest::CLIPBOARD_SAVE_TASK);
+    }
     req.setStaticID(id);
     Controller::getInstance()->requestCapture(req);
 }
diff -urt flameshot.orig/src/core/flameshotdbusadapter.h flameshot.new/src/core/flameshotdbusadapter.h
--- flameshot.orig/src/core/flameshotdbusadapter.h	2020-02-29 14:15:14.251928361 +0100
+++ flameshot.new/src/core/flameshotdbusadapter.h	2020-02-29 14:27:41.406538899 +0100
@@ -33,7 +33,7 @@
     void captureFailed(uint id);
 
 public slots:
-    Q_NOREPLY void graphicCapture(QString path, int delay, uint id);
+    Q_NOREPLY void graphicCapture(QString path, bool toClipboard, int delay, uint id);
     Q_NOREPLY void fullScreen(QString path, bool toClipboard, int delay, uint id);
     Q_NOREPLY void captureScreen(int number, QString path, bool toClipboard, int delay, uint id);
     Q_NOREPLY void openLauncher();
Only in flameshot.new/src/core: flameshotdbusadapter.h.orig
diff -urt flameshot.orig/src/main.cpp flameshot.new/src/main.cpp
--- flameshot.orig/src/main.cpp	2020-02-29 14:15:14.251928361 +0100
+++ flameshot.new/src/main.cpp	2020-02-29 14:30:45.413348982 +0100
@@ -200,7 +200,8 @@
     parser.AddArgument(configArgument);
     auto helpOption = parser.addHelpOption();
     auto versionOption = parser.addVersionOption();
-    parser.AddOptions({ pathOption, delayOption, rawImageOption }, guiArgument);
+    parser.AddOptions({ pathOption, clipboardOption, delayOption, rawImageOption },
+                      guiArgument);
     parser.AddOptions({ screenNumberOption, clipboardOption, pathOption,
                         delayOption, rawImageOption },
                       screenArgument);
@@ -231,15 +232,19 @@
     else if (parser.isSet(guiArgument)) { // GUI
         QString pathValue = parser.value(pathOption);
         int delay = parser.value(delayOption).toInt();
+        bool toClipboard = parser.isSet(clipboardOption);
         bool isRaw = parser.isSet(rawImageOption);
         DBusUtils dbusUtils;
         CaptureRequest req(CaptureRequest::GRAPHICAL_MODE, delay, pathValue);
+        if (toClipboard) {
+            req.addTask(CaptureRequest::CLIPBOARD_SAVE_TASK);
+        }
         uint id = req.id();
 
         // Send message
         QDBusMessage m = QDBusMessage::createMethodCall(QStringLiteral("org.dharkael.Flameshot"),
                                            QStringLiteral("/"), QLatin1String(""), QStringLiteral("graphicCapture"));
-        m << pathValue << delay << id;
+        m << pathValue << toClipboard << delay << id;
         QDBusConnection sessionBus = QDBusConnection::sessionBus();
         dbusUtils.checkDBusConnection(sessionBus);
         sessionBus.call(m);
